ALL IN ONE
#include <iostream>
using namespace std;

int main()
{
    
    for (int row1 = 10; row1 >= 1; row1--) {          
        for (int column1 = row1; column1 > 0; column1--) {     
            cout << "* ";         
        }
        cout << endl; 
    }
    
     for (int row2 = 1; row2 <= 10; row2++) {          
        for (int column2 = 1; column2 <= row2; column2++) {     
            cout << "* ";    
        }
        cout << endl;  
     }
     
    return 0;
}
-----------------

TRIANGLE 1

#include <iostream>
using namespace std;

int main()
{
    
    for (int row = 10; row >= 1; row--) {          // used >= to start with larger number // used -- for decrement so first row will start with 10 asterisks, gradually decreasing per row to create a triangle
        for (int column = row; column > 0; column--) {     
            cout << "* ";         
        }
        cout << endl; 
    }
    
    return 0;
}

-------
TRIANGLE 2

#include <iostream>
using namespace std;

int main()
{
    
    for (int row = 1; row <= 10; row++) {  // used <== to start with small number // used ++ for increment, first row will start with one asterisk, increasing per row, creating a triangle        
        for (int column = 1; column <= row; column++) {     
            cout << "* ";    
        }
        cout << endl;  
    }
    
    return 0;
}
--------


NOTES:
condition for sqaure was column <= n (given that initialization is small num and updation is increment)
to make it triangle, add row to condition column <= row
to invert the triangle, initialize with large number then change condition to >= and updation is decrement


